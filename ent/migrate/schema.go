// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeInt},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Columns:    GroupsColumns,
		PrimaryKey: []*schema.Column{GroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "groups_tenants_groups",
				Columns:    []*schema.Column{GroupsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TenantsColumns holds the columns for the "tenants" table.
	TenantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// TenantsTable holds the schema information for the "tenants" table.
	TenantsTable = &schema.Table{
		Name:       "tenants",
		Columns:    TenantsColumns,
		PrimaryKey: []*schema.Column{TenantsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "age", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeInt},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_tenants_users",
				Columns:    []*schema.Column{UsersColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserPermsColumns holds the columns for the "user_perms" table.
	UserPermsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "admin", Type: field.TypeBool},
		{Name: "license_1", Type: field.TypeBool},
		{Name: "user_id", Type: field.TypeInt},
	}
	// UserPermsTable holds the schema information for the "user_perms" table.
	UserPermsTable = &schema.Table{
		Name:       "user_perms",
		Columns:    UserPermsColumns,
		PrimaryKey: []*schema.Column{UserPermsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_perms_users_user_perms",
				Columns:    []*schema.Column{UserPermsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		GroupsTable,
		TenantsTable,
		UsersTable,
		UserPermsTable,
	}
)

func init() {
	GroupsTable.ForeignKeys[0].RefTable = TenantsTable
	UsersTable.ForeignKeys[0].RefTable = TenantsTable
	UserPermsTable.ForeignKeys[0].RefTable = UsersTable
}
